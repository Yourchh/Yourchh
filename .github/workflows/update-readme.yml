name: Update README with Recent Activity

on:
  schedule:
    - cron: "0 */12 * * *" # cada 12 horas
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Fetch GitHub activity
        id: fetch_activity
        run: |
          # GraphQL query para tu usuario
          QUERY='{
            user(login: "Yourchh") {
              contributionsCollection {
                commitContributionsByRepository(maxRepositories: 5) {
                  repository { name url }
                  contributions(first: 10) { nodes { occurredAt } }
                }
                pullRequestContributions(first: 10) {
                  nodes { pullRequest { title url repository { name } createdAt } }
                }
                issueContributions(first: 10) {
                  nodes { issue { title url repository { name } createdAt } }
                }
              }
            }
          }'

          RESPONSE=$(curl -s -H "Authorization: bearer ${{ secrets.GH_PATH }}" \
            -X POST -d "{\"query\": \"$QUERY\"}" https://api.github.com/graphql)

          echo "$RESPONSE" > activity.json

          # Formatear eventos (commit, PR, issue)
          COMMITS=$(jq -r '.data.user.contributionsCollection.commitContributionsByRepository[]?.contributions.nodes[]? | "‚ö° Commit en " + .repository.name + " el " + .occurredAt[0:10]' activity.json)
          PRS=$(jq -r '.data.user.contributionsCollection.pullRequestContributions.nodes[]? | "üìù PR: [" + .pullRequest.title + "](" + .pullRequest.url + ") en " + .pullRequest.repository.name + " el " + .pullRequest.createdAt[0:10]' activity.json)
          ISSUES=$(jq -r '.data.user.contributionsCollection.issueContributions.nodes[]? | "‚ùó Issue: [" + .issue.title + "](" + .issue.url + ") en " + .issue.repository.name + " el " + .issue.createdAt[0:10]' activity.json)

          ALL_EVENTS=$(printf "%s\n%s\n%s\n" "$COMMITS" "$PRS" "$ISSUES" | sort -r | head -n 10)
          ACTIVITY=$(echo "$ALL_EVENTS" | sed '/^$/d' | sed ':a;N;$!ba;s/\n/\n/g')

          echo "ACTIVITY<<EOF" >> $GITHUB_ENV
          echo "$ACTIVITY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update README
        run: |
          sed -i "/<!--START_SECTION:activity-->/, /<!--END_SECTION:activity-->/c\<!--START_SECTION:activity-->\n$ACTIVITY\n<!--END_SECTION:activity-->" README.md

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update recent activity" || echo "No changes to commit"
          git push
